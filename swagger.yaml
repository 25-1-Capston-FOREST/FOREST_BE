openapi: 3.0.0
info:
  title: FOREST API
  description: FOREST API 서버 문서
  version: 1.0.0
servers:
  - url: https://capston-forest.duckdns.org
    description: 배포된 서버
paths:
  /api/book:
    post:
      summary: 여가 예약 추가
      description: 사용자가 여가 예약을 추가할 수 있는 API입니다. 동일한 예약이 이미 존재하는 경우 중복 오류를 반환합니다.
      operationId: handleAddBook
      tags:
        - User Activity
      security:
        - bearerAuth: [] # 이 경로는 인증이 필요함
      requestBody:
        description: 여가 예약 정보를 담은 JSON 객체
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activityDate:
                  type: string
                  description: 예약할 날짜 (ISO 8601 형식)
                  example: "2025-03-05 00:00:00"
      parameters:
        - in: query
          name: id
          description: 예약할 활동의 id (activity_id)
          required: true
          schema:
            type: string
            example: "1"
      responses:
        200:
          description: 예약이 성공적으로 추가된 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "예약이 성공적으로 추가되었습니다."
                  data:
                    type: object
                    properties:
                      user_activity_id:
                        type: string
                        example: "1"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "1"
        400:
          description: 유효하지 않은 입력값
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "activityId가 필요합니다"
        401:
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        409:
          description: 중복 예약 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이미 해당 예약이 존재합니다."
        500:
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "예약 추가 오류"
    patch:
      summary: 여가 예약 날짜 수정
      description: 사용자의 여가 예약 날짜를 변경합니다.
      security:
        - bearerAuth: []
      tags: 
        - User Activity
      parameters:
        - name: id
          in: query
          required: true
          description: 수정할 예약의 id (user_activity_id)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activityDate:
                  type: string
                  format: date-time
                  description: 변경할 예약 날짜 (ISO 8601 형식)
                  example: "2025-01-01 00:00:00"
      responses:
        "200":
          description: 여가 예약 날짜가 성공적으로 변경됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "여가 예약 날짜가 성공적으로 변경되었습니다."
                  data:
                    type: object
                    properties:
                      user_activity_id:
                        type: string
                        example: "16"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "2"
                      activity_status:
                        type: integer
                        example: 0
                      activity_date:
                        type: string
                        format: date-time
                        example: "2025-03-06T10:00:00.000Z"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T01:04:41.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T01:43:13.000Z"
        "400":
          description: 잘못된 요청 (id 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id값이 쿼리에 필요합니다"
        "401":
          description: 잘못된 요청 (activityDate 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "수정할 date값이 필요합니다"
        "409":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
    delete:
      summary: 여가 예약 취소
      description: 특정 사용자의 여가 예약을 취소합니다.
      tags:
        - User Activity
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: 취소할 예약의 id (user_activity_id)
          schema:
            type: string
      responses:
        "200":
          description: 여가 예약이 성공적으로 취소됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "여가 예약이 성공적으로 취소되었습니다."
                  data:
                    type: object
                    properties:
                      user_activity_id:
                        type: string
                        example: "16"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "2"
                      activity_status:
                        type: integer
                        example: 1
                      activity_date:
                        type: string
                        format: date-time
                        example: "2025-03-06T10:00:00.000Z"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T01:04:41.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T02:13:02.000Z"
        "400":
          description: 잘못된 요청 (id 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id가 쿼리에 필요합니다."
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
  /api/user/activities:
    get:
      summary: 사용자 여가 목록 조회
      description: 사용자의 특정 상태(status)에 해당하는 여가 활동 목록을 조회합니다.
      tags:
        - User Activity
      security:
        - bearerAuth: [] # 이 경로는 인증이 필요함
      parameters:
        - name: status
          in: query
          required: true
          description: 여가 상태 (0 예약, 1 완료됨)
          schema:
            type: integer
            enum: [0, 1]
      responses:
        "200":
          description: 성공적으로 여가 목록을 조회한 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "사용자 여가 목록이 성공적으로 조회되었습니다."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        activity_id:
                          type: string
                          description: 여가 활동 ID
                          example: "1"
                        activity_type:
                          type: string
                          description: 여가 활동 유형 (예: 영화, 공연, 전시)
                          example: "movie"
                        activity_date:
                          type: string
                          format: date-time
                          description: 여가 활동 날짜
                          example: "2025-03-05T09:00:00.000Z"
                        detailedInfo:
                          type: object
                          description: 여가 활동 상세 정보
                          properties:
                            movie_id:
                              type: string
                              description: 영화 ID
                              example: "1"
                            activity_id:
                              type: string
                              description: 활동 ID
                              example: "1"
                            title:
                              type: string
                              description: 영화 제목
                              example: "testMovie1"
                            image_url:
                              type: string
                              nullable: true
                              description: 이미지 URL (없을 수도 있음)
                              example: null
                            open_dt:
                              type: string
                              description: 개봉일
                            rank:
                              type: string
                              description: 랭킹
                            audi_acc:
                              type: string
                              description: 누적관객수
                            show_tm:
                              type: string
                              description: 러닝타임
                            genre_nm:
                              type: string
                              description: 장르
                            director:
                              type: string
                              description: 감독
                            actors:
                              type: string
                              description: 배우
                            keywords:
                              type: array
                              items:
                                type: string
                            created_at:
                              type: string
                              format: date-time
                              description: 생성 시간
                              example: "2025-03-04T14:50:22.000Z"
                            updated_at:
                              type: string
                              format: date-time
                              description: 수정 시간
                              example: "2025-03-04T14:50:22.000Z"
                        isWished:
                          type: boolean
                          description: 사용자가 해당 활동을 찜했는지 여부
                          example: false
        "400":
          description: status 값이 제공되지 않은 경우
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "status가 필요합니다"
        "401":
          description: 인증되지 않은 사용자
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        "500":
          description: 서버 오류 발생
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 내부 오류"
  /api/user/activity:
    patch:
      summary: 여가 완료 처리
      description: 특정 사용자의 여가 상태를 '완료'로 변경합니다.
      tags:
        - User Activity
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: 완료 처리할 예약의 id (user_activity_id)
          schema:
            type: string
      responses:
        "200":
          description: 여가가 성공적으로 완료 처리됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "여가가 성공적으로 완료 처리되었습니다."
                  data:
                    type: object
                    properties:
                      user_activity_id:
                        type: string
                        example: "16"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "2"
                      activity_status:
                        type: integer
                        example: 1
                      activity_date:
                        type: string
                        format: date-time
                        example: "2025-03-06T10:00:00.000Z"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T01:04:41.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T02:08:08.000Z"
        "400":
          description: 잘못된 요청 (id 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id가 쿼리에 필요합니다."
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
  /api/wish:
    post:
      summary: 여가 찜하기
      description: 특정 사용자의 찜 목록에 여가를 추가합니다.
      tags:
        - WishList
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: 찜할 활동의 id (activity_id)
          schema:
            type: string
      responses:
        "200":
          description: 여가가 성공적으로 찜됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "여가를 성공적으로 찜했습니다."
                  data:
                    type: object
                    properties:
                      wish_id:
                        type: string
                        example: "4"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "2"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T09:31:43.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T09:31:43.000Z"
        "400":
          description: 잘못된 요청 (id 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id가 쿼리에 필요합니다."
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        "409":
          description: 이미 찜한 여가
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "이미 찜하기 된 예약입니다."
    delete:
      summary: 여가 찜 삭제
      description: 사용자가 찜한 여가를 찜 목록에서 삭제합니다.
      tags:
        - WishList
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: 삭제할 찜의 id (wish_id)
          schema:
            type: string
      responses:
        "200":
          description: 여가가 성공적으로 찜 목록에서 삭제됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "여가를 성공적으로 찜 목록에서 삭제했습니다."
                  data:
                    type: object
                    properties:
                      wish_id:
                        type: string
                        example: "9"
                      user_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "3"
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T10:20:41.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-05T10:20:41.000Z"
        "400":
          description: 잘못된 요청 (id 값이 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "id가 쿼리에 필요합니다."
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        "404":
          description: 찜 목록에 없는 여가
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "해당 여가가 찜 목록에 없습니다."
  /api/user/wishlist:
    get:
      summary: 사용자 찜 목록 조회
      description: 현재 로그인한 사용자의 찜한 활동 목록을 조회합니다.
      tags:
        - WishList
      security:
        - BearerAuth: []
      responses:
        200:
          description: 찜 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "찜 목록을 성공적으로 조회했습니다."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        wish_id:
                          type: string
                          description: 찜 ID (BigInt → 문자열 변환)
                          example: "7"
                        activity_id:
                          type: string
                          description: 활동 ID (BigInt → 문자열 변환)
                          example: "1"
                        activity_type:
                          type: string
                          description: 활동 유형 (movie, performance, exhibition 중 하나)
                          example: "movie"
                        detailedInfo:
                          type: object
                          description: 여가 활동 상세 정보
                          properties:
                            movie_id:
                              type: string
                              description: 영화 ID
                              example: "1"
                            activity_id:
                              type: string
                              description: 활동 ID
                              example: "1"
                            title:
                              type: string
                              description: 영화 제목
                              example: "testMovie1"
                            image_url:
                              type: string
                              nullable: true
                              description: 이미지 URL (없을 수도 있음)
                              example: null
                            open_dt:
                              type: string
                              description: 개봉일
                            rank:
                              type: string
                              description: 랭킹
                            audi_acc:
                              type: string
                              description: 누적관객수
                            show_tm:
                              type: string
                              description: 러닝타임
                            genre_nm:
                              type: string
                              description: 장르
                            director:
                              type: string
                              description: 감독
                            actors:
                              type: string
                              description: 배우
                            keywords:
                              type: array
                              items:
                                type: string
                            created_at:
                              type: string
                              format: date-time
                              description: 생성 시간
                              example: "2025-03-04T14:50:22.000Z"
                            updated_at:
                              type: string
                              format: date-time
                              description: 수정 시간
                              example: "2025-03-04T14:50:22.000Z"
                        isWished:
                          type: boolean
                          description: 사용자가 해당 활동을 찜했는지 여부
                          example: false
        401:
          description: 인증되지 않은 사용자
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        500:
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 오류 발생"
  /api/review:
    post:
      summary: 리뷰 작성
      description: 특정 활동(activity)에 대한 리뷰를 작성합니다.
      tags:
        - Review
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: query
          required: true
          description: 사용자 활동 ID (`user_activity_id`)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                  example: 4.5
                  description: 리뷰 평점 (0.0 ~ 5.0)
                content:
                  type: string
                  example: "This is a review for test."
                  description: 리뷰 내용 (선택 사항)
      responses:
        "200":
          description: 리뷰 작성 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "리뷰를 성공적으로 작성했습니다."
                  data:
                    type: object
                    properties:
                      review_id:
                        type: string
                        example: "3"
                      user_id:
                        type: string
                        example: "1"
                      user_activity_id:
                        type: string
                        example: "1"
                      activity_id:
                        type: string
                        example: "1"
                      rate:
                        type: number
                        example: 4.5
                      content:
                        type: string
                        example: "This is a review for test."
                      created_at:
                        type: string
                        format: date-time
                        example: "2025-03-06T07:07:15.000Z"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2025-03-06T07:07:15.000Z"
        "400":
          description: 잘못된 요청 (예: 쿼리 ID 없음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "id가 쿼리에 필요합니다."
        "401":
          description: 인증 실패 (로그인이 필요함)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:                                                                                                                  
                    type: string
                    example: "서버 내부 오류 발생"
  /api/user/reviews:
    get:
      summary: "사용자 리뷰 조회"
      description: "현재 로그인한 사용자가 작성한 리뷰 목록을 조회합니다."
      tags:
        - Review
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "리뷰를 성공적으로 조회했습니다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "리뷰를 성공적으로 조회했습니다."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        review_id:
                          type: string
                          example: "4"
                        user_id:
                          type: string
                          example: "1"
                        user_activity_id:
                          type: string
                          example: "1"
                        activity_id:
                          type: string
                          example: "1"
                        rate:
                          type: number
                          example: 4.5
                        content:
                          type: string
                          example: "This is a review for test."
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-03-06T07:13:56.000Z"
                        updated_at:
                          type: string
                          format: date-time
                          example: "2025-03-06T07:13:56.000Z"
        "401":
          description: "사용자 인증 실패"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 인증 실패"
        "500":
          description: "서버 오류"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 내부 오류가 발생했습니다."
  /api/detail:
    get:
      tags:
        - 여가 활동
      summary: 여가 활동 상세 정보 조회
      description: activity_id를 통해 여가 활동(영화/공연/전시)의 상세 정보를 조회합니다.
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: 조회할 여가 활동의 ID (activity_id)
      responses:
        '200':
          description: 여가 활동 상세 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 여가 상세 정보가 성공적으로 조회되었습니다.
                  data:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: "1"
                      movie_id:
                        type: string
                        example: "1"
                      movie_cd:
                        type: string
                        example: "20203863"
                      title:
                        type: string
                        example: "승부"
                      image_url:
                        type: string
                        nullable: true
                      open_dt:
                        type: string
                        example: "20250326"
                      rank:
                        type: string
                        example: "1"
                      audi_acc:
                        type: string
                        example: "1351651"
                      show_tm:
                        type: string
                        example: "114"
                      genre_nm:
                        type: string
                        example: "드라마"
                      director:
                        type: string
                        example: "김형주"
                      actors:
                        type: string
                        example: "이병헌, 유아인, 고창석, 현봉식, 문정희"
                      keywords:
                        type: string
                        nullable: true
                      created_at:
                        type: object
                      updated_at:
                        type: object
        '400':
          description: 잘못된 요청 (activity id 누락)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: activity id가 필요합니다
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
  /api/recommendation:
    get:
      summary: 추천 리스트 조회
      description: 사용자의 선호도를 기반으로 한 추천 활동 리스트를 조회합니다.
      tags:
        - 추천
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          required: true
          description: 사용자 ID
      responses:
        '200':
          description: 추천 리스트 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 추천 리스트를 성공적으로 가져왔습니다.
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        activity_id:
                          type: string
                          example: "1"
                        activity_type:
                          type: string
                          example: MOVIE
                        created_at:
                          type: object
                          example: {}
                        updated_at:
                          type: object
                          example: {}
                        detail:
                          type: object
                          properties:
                            activity_id:
                              type: string
                              example: "1"
                            movie_id:
                              type: string
                              example: "1"
                            movie_cd:
                              type: string
                              example: "20203863"
                            title:
                              type: string
                              example: "승부"
                            image_url:
                              type: string
                              nullable: true
                              example: null
                            open_dt:
                              type: string
                              example: "20250326"
                            rank:
                              type: string
                              example: "1"
                            audi_acc:
                              type: string
                              example: "1351651"
                            show_tm:
                              type: string
                              example: "114"
                            genre_nm:
                              type: string
                              example: "드라마"
                            director:
                              type: string
                              example: "김형주"
                            actors:
                              type: string
                              example: "이병헌, 유아인, 고창석, 현봉식, 문정희"
                            keywords:
                              type: string
                              nullable: true
                              example: null
                            created_at:
                              type: object
                              example: {}
                            updated_at:
                              type: object
                              example: {}
        '400':
          description: 요청 파라미터 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: userId가 필요합니다.
        '500':
          description: 서버 내부 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 서버 내부 오류가 발생했습니다.
components:
  securitySchemes:
    bearerAuth:        # 위에서 사용한 이름과 같아야 해
      type: http
      scheme: bearer
      bearerFormat: JWT
